import mmap
from tkinter import filedialog

wrongCodeHexArray =  [ 
                    "507F0A0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 929F0A0C",
                    "507F0A0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 929F0A0C",
                    "4E490C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 10710C0C",
                    "50200C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 FE470C0C",
                    "AC590C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 5A810C0C",
                    "2A4E0C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 D8750C0C",
                    "32CE0C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 E0F50C0C",
                    "3AAA0C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 D4D10C0C",
                    "30490D0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 DE700D0C",
                    "C8210C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 76490C0C",
                    "547D0C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 16A50C0C",
                    "F4390C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 A2610C0C",
                    "FCB30C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 96DB0C0C",
                    "1C920C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 CAB90C0C",
                    "E6570C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 947F0C0C",
                    "F8710C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 A6990C0C",
                    "A2670C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 508F0C0C",
                    "50AC0C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 FED30C0C",
                    "FA2E0C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 A8560C0C",
                    "FA4B0C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 A8730C0C",
                    "36B50C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 F4DC0C0C",
                    "8C3F0C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 5E670C0C",
                    "6C9D0C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 2AC50C0C",
                    "86630C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 488B0C0C",
                    "885E0C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 36860C0C",
                    "4E700C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 FC970C0C",
                    "F8410C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 84690C0C",
                    "10930C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 9CBA0C0C",
                    "D8490C0C 2D208002 D040013C 00088144 00000000 36080046 00000000 79000045 2D208002 02000524 2D300000 2D380000 86710C0C"                
                ]
wrongCodeBytesArray = [bytes.fromhex(wrong) for wrong in wrongCodeHexArray]
codeFixString = "803F013C"
codeFixBytes = bytes.fromhex(codeFixString)


filetypes = (
        ('ISO files', '*.iso'),
        ('All files', '*.*')
    )

filename = filedialog.askopenfilename(
    title='Choose R&C2 game ISO',
    initialdir='.',
    filetypes=filetypes)


with open(filename, "r+") as f:
    mm = mmap.mmap(f.fileno(),0)
    mmSize = mm.size()
    mmPos = mm.tell()
    
    while len(wrongCodeBytesArray) > 0:
        print(str(len(wrongCodeBytesArray)) + " Remaining out of 29")
        mm.seek(0)
        mmFindPos = mm.find(wrongCodeBytesArray[0])
        mm.seek(mmFindPos + 8)
        mm.write(codeFixBytes)
        wrongCodeBytesArray.pop(0)
    mm.flush()

